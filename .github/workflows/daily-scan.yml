name: BIST Sequential Scanner (Önerilen)

on:
  schedule:
    - cron: '55 6 * * 1-5'  # 09:55 TR
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'bist_scanner.py'
      - 'momentum_scanner.py'
      - '.github/workflows/daily-scan.yml'

jobs:
  sequential-scan:
    name: "📊 Sıralı Tarama - İki Strateji"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib seaborn requests urllib3
    
    # ═══════════════════════════════════════════════
    # 1️⃣ İLK TARAMA: MOMENTUM (Daha hızlı)
    # ═══════════════════════════════════════════════
    - name: "🎯 MOMENTUM Taraması"
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        echo "════════════════════════════════════════"
        echo "🎯 MOMENTUM STRATEJİSİ BAŞLIYOR"
        echo "════════════════════════════════════════"
        python momentum_scanner.py
        echo ""
        echo "✅ Momentum taraması tamamlandı!"
        echo ""
    
    # Kısa ara (Telegram rate limit için)
    - name: "⏸️ Kısa Ara (10 saniye)"
      run: sleep 10
    
    # ═══════════════════════════════════════════════
    # 2️⃣ İKİNCİ TARAMA: TAM ÖZELLİKLİ
    # ═══════════════════════════════════════════════
    - name: "🔍 TAM ÖZELLİKLİ Tarama"
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        echo "════════════════════════════════════════"
        echo "🔍 TAM ÖZELLİKLİ TARAMA BAŞLIYOR"
        echo "════════════════════════════════════════"
        python bist_scanner.py
        echo ""
        echo "✅ Tam tarama tamamlandı!"
        echo ""
    
    # ═══════════════════════════════════════════════
    # SONUÇLARI KAYDET
    # ═══════════════════════════════════════════════
    - name: "📁 Sonuçları Kaydet"
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dual-scan-results-${{ github.run_number }}
        path: |
          momentum_scan.csv
          bist_scan_results.csv
          *.png
        retention-days: 30
    
    # ═══════════════════════════════════════════════
    # GIT COMMIT (Opsiyonel)
    # ═══════════════════════════════════════════════
    - name: "💾 Git Commit (Opsiyonel)"
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "BIST Scanner Bot"
        git add -f *.csv || true
        git commit -m "📊 Dual scan - $(date +'%Y-%m-%d %H:%M')" || true
        git push || true
      continue-on-error: true
    
    # ═══════════════════════════════════════════════
    # ÖZET BİLDİRİMİ
    # ═══════════════════════════════════════════════
    - name: "📢 Özet Bildirimi"
      if: always()
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        python << 'EOF'
        import os
        import requests
        
        token = os.environ.get('TELEGRAM_BOT_TOKEN')
        chat_id = os.environ.get('TELEGRAM_CHAT_ID')
        
        if token and chat_id:
            message = """
🏁 *HER İKİ TARAMA TAMAMLANDI!*

✅ Momentum Stratejisi
✅ Tam Özellikli Tarama

📊 Sonuçlar Telegram'a gönderildi
📁 CSV dosyaları oluşturuldu
            """
            
            url = f"https://api.telegram.org/bot{token}/sendMessage"
            data = {
                'chat_id': chat_id,
                'text': message.strip(),
                'parse_mode': 'Markdown'
            }
            requests.post(url, data=data)
        EOF
